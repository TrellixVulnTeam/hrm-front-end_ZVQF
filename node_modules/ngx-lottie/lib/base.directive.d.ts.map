{"version":3,"file":"base.directive.d.ts","sources":["base.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, SimpleChanges, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AnimationOptions, BMCompleteEvent, BMCompleteLoopEvent, BMEnterFrameEvent, BMSegmentStartEvent, BMDestroyEvent, BMRenderFrameErrorEvent, BMConfigErrorEvent } from './symbols';\nimport { AnimationLoader } from './animation-loader';\nexport declare class BaseDirective implements OnDestroy {\n    private ngZone;\n    private platformId;\n    private animationLoader;\n    options: AnimationOptions | null;\n    containerClass: string | null;\n    styles: Partial<CSSStyleDeclaration> | null;\n    /**\n     * `animationCreated` is dispatched after calling `loadAnimation`.\n     */\n    animationCreated: Observable<import(\"lottie-web\").AnimationItem>;\n    /**\n     * `complete` is dispatched after completing the last frame.\n     */\n    complete: Observable<BMCompleteEvent>;\n    /**\n     * `loopComplete` is dispatched after completing the frame loop.\n     */\n    loopComplete: Observable<BMCompleteLoopEvent>;\n    /**\n     * `enterFrame` is dispatched after entering the new frame.\n     */\n    enterFrame: Observable<BMEnterFrameEvent>;\n    /**\n     * `segmentStart` is dispatched when the new segment is adjusted.\n     */\n    segmentStart: Observable<BMSegmentStartEvent>;\n    /**\n     * Original event name is `config_ready`. `config_ready` is dispatched\n     * after the needed renderer is configured.\n     */\n    configReady: Observable<void>;\n    /**\n     * Original event name is `data_ready`. `data_ready` is dispatched\n     * when all parts of the animation have been loaded.\n     */\n    dataReady: Observable<void>;\n    /**\n     * Original event name is `DOMLoaded`. `DOMLoaded` is dispatched\n     * when elements have been added to the DOM.\n     */\n    domLoaded: Observable<void>;\n    /**\n     * `destroy` will be dispatched when the component gets destroyed,\n     * it's handy for releasing resources.\n     */\n    destroy: Observable<BMDestroyEvent>;\n    /**\n     * `error` will be dispatched if the Lottie player could not render\n     * some frame or parse config.\n     */\n    error: Observable<BMRenderFrameErrorEvent | BMConfigErrorEvent>;\n    private destroy$;\n    private loadAnimation$;\n    private animationItem$;\n    constructor(ngZone: NgZone, platformId: string, animationLoader: AnimationLoader);\n    ngOnDestroy(): void;\n    protected loadAnimation(changes: SimpleChanges, container: HTMLElement): void;\n    private getAnimationItem;\n    private awaitAnimationItemAndStartListening;\n    private setupLoadAnimationListener;\n    private destroyAnimation;\n}\n"]}